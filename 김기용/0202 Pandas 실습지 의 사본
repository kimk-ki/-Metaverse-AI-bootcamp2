{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"markdown","source":["## Pandas\n","### 1. 라이브러리 불러오기 \n","\n","통상 pd 로 불러옵니다.\n","jupyter notebook이 아닌 환경이라면 다음의 링크를 확인해보세요. \n","\n","https://pandas.pydata.org/docs/getting_started/index.html#getting-started "],"metadata":{"id":"bHDq58t5jjl5"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"g16_B7DejWfU","executionInfo":{"status":"ok","timestamp":1675321564935,"user_tz":-540,"elapsed":1477,"user":{"displayName":"ki kim","userId":"11877903355283430795"}}},"outputs":[],"source":["# numpy 도 필요하니 불러옵니다.\n","import numpy as np\n","\n","import pandas as pd "]},{"cell_type":"markdown","source":["### 2. series  생성하기\n","\n","series 를 생성할 때는 pd.Series라는 함수를 씁니다. 이때 data 또는 index 중 하나를 꼭 정해주어야 합니다. data를 별도로 지정하지 않는다면 NaN 값이 부여됩니다. index를 별도로 지정해주지 않는다면 앞에서부터 순서대로 0, 1, 2, ... 의 정수가 index로 자동 지정됩니다.  \n","\n","2-1. 직접 정의하기\n","\n","```\n","** 파라미터 목록 **\n"," - data: 데이터 \n"," - dtype: 데이터의 종류\n"," - index: 행별 이름 \n"," - name: series의 이름\n","```"],"metadata":{"id":"94XKOhnJkKlv"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"1F7ZMRnd8nPL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from os import NGROUPS_MAX\n","# 출처: 'Fossil Fuel Emission levels - Pounts per Billion BTUs of Energy Input', EIA, Natural Gas Issues and Trends, 1998\n","list_data = [117000, 40, 92, 1, 7, np.nan]\n","list_name = ['CO2', 'CO', 'NOx', 'SO2', 'PM', 'Mercury']\n","\n","NG = pd.Series(data=list_data, index=list_name, name='natural_gas_emission')\n","print(NG)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m7JF56HIkD66","executionInfo":{"status":"ok","timestamp":1675321605601,"user_tz":-540,"elapsed":756,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"83a03d77-c255-43dd-d8b7-655ce1c462a9"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["CO2        117000.0\n","CO             40.0\n","NOx            92.0\n","SO2             1.0\n","PM              7.0\n","Mercury         NaN\n","Name: natural_gas_emission, dtype: float64\n"]}]},{"cell_type":"markdown","source":["2-2. dict를 series로 만들기 \n"],"metadata":{"id":"HFYiT03Km3Ga"}},{"cell_type":"code","source":["d = {'solar':1, 'wind':2, 'hydro':3}\n","energy = pd.Series(data=d, index=['solar', 'wind', 'hydro'])\n","print(energy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NL6HdgA9mAQQ","executionInfo":{"status":"ok","timestamp":1675321609315,"user_tz":-540,"elapsed":642,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"370f77c5-ebba-4122-9a73-02e7ae4852ff"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["solar    1\n","wind     2\n","hydro    3\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["2-3. data 또는 index 만으로 빈 series 생성하기 "],"metadata":{"id":"6ayuRn6xkJF1"}},{"cell_type":"code","source":["data = [1, 2, 3, 4]\n","energy2 = pd.Series(data=data)\n","print(energy2)\n","\n","indexes = ['solar', 'wind', 'hydro', 'oil']\n","energy3 = pd.Series(index=indexes)\n","print(energy3)"],"metadata":{"id":"xvoG9GLKjtUh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 3. Series 다루기\n","\n","3-1. 특정한 위치의 value 에 접근하기"],"metadata":{"id":"fcmFNOzDgOjy"}},{"cell_type":"code","source":["# index 로 접근\n","print(energy['solar'])\n","\n","# 정수 위치로 접근(0번째, 첫번째, ...)\n","print(energy.iloc[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-08LMc7Lgb-l","executionInfo":{"status":"ok","timestamp":1674006304146,"user_tz":-540,"elapsed":5,"user":{"displayName":"Juhong Eom","userId":"06813485282886698001"}},"outputId":"783478f0-3202-4b2d-e319-0c1ef2df934b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","1\n"]}]},{"cell_type":"markdown","source":["3-2. 특정한 위치의 value 바꾸기 "],"metadata":{"id":"vaclmL_IgiM6"}},{"cell_type":"code","source":["# index 로 접근\n","energy['solar'] = 100\n","\n","# 정수 위치로 접근 \n","energy.iloc[2] = 400\n","print(energy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yQqQuBP6ghSx","executionInfo":{"status":"ok","timestamp":1674007438353,"user_tz":-540,"elapsed":267,"user":{"displayName":"Juhong Eom","userId":"06813485282886698001"}},"outputId":"3eb32163-a588-4c83-b8b8-90415ab163fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["solar    100\n","wind       2\n","water    400\n","dtype: int64"]},"metadata":{},"execution_count":55}]},{"cell_type":"markdown","source":["3-3. index 만 또는 data 만 조회하기 "],"metadata":{"id":"H4i9_RAag-2Q"}},{"cell_type":"code","source":["print(energy.values)\n","print(energy.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mD11p20yhbpD","executionInfo":{"status":"ok","timestamp":1674005864143,"user_tz":-540,"elapsed":295,"user":{"displayName":"Juhong Eom","userId":"06813485282886698001"}},"outputId":"4531af20-4a85-47c6-8f5a-350e9648c31d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[100   2   3]\n","Index(['solar', 'wind', 'water'], dtype='object')\n"]}]},{"cell_type":"markdown","source":["### 4. DataFrame  생성하기\n","\n","DataFrame 을 생성할 때는 pd.DataFrame라는 함수를 씁니다. 이때 data를 꼭 정해주어야 합니다. index를 별도로 지정해주지 않는다면 앞에서부터 순서대로 0, 1, 2, ... 의 정수가 index로 자동 지정됩니다.\n","\n","TIP>  DataFrame을 Jupyter Notebook에서 확인할 때에는 print() 함수를 쓰지 않는 편이 좋습니다. 알아서 깔끔하게 표로 정리해 보여줍니다. \n","\n","4-1. 직접 정의하기\n","\n","\n","```\n","** 파라미터 목록 **\n"," - data: 데이터\n"," - dtype: 데이터의 종류\n"," - index: 각 행의 이름\n"," - columns: 각 열의 이름  \n","```"],"metadata":{"id":"-fdBl9E7OKx6"}},{"cell_type":"code","source":["d = {\n","        'num': 1, \n","        'date_time': pd.Timestamp(\"20200601\"), \n","        'kWh':[8179, 8135]\n","     }\n","df = pd.DataFrame(data=d)\n","\n","df"],"metadata":{"id":"OazFWozIPxvP","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1675321623828,"user_tz":-540,"elapsed":1571,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"a4566729-dec6-4518-b9e6-333709c0e0e1"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   num  date_time   kWh\n","0    1 2020-06-01  8179\n","1    1 2020-06-01  8135"],"text/html":["\n","  <div id=\"df-de60d007-fff1-4c22-8e10-321fd28239ec\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num</th>\n","      <th>date_time</th>\n","      <th>kWh</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2020-06-01</td>\n","      <td>8179</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2020-06-01</td>\n","      <td>8135</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de60d007-fff1-4c22-8e10-321fd28239ec')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-de60d007-fff1-4c22-8e10-321fd28239ec button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-de60d007-fff1-4c22-8e10-321fd28239ec');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["4-2. 엑셀 파일을 업로드하여 정의하기 \n","\n","DACON에서 진행되었던 전력사용량 예측 AI 경진대회(한국에너지공단)의 데이터를 불러와 DataFrame 으로 정리해봅시다. \n","\n","데이터는 첫번째 건물에서 2020년 6월 1일부터 5일까지 사용한 전력량, 당시 온도, 풍량, 습도, 강수량 등입니다. \n","\n","출처: https://dacon.io/competitions/official/235736/data "],"metadata":{"id":"Hg_zNSEFPx53"}},{"cell_type":"code","source":["elec_excel_path = 'pd_test.xlsx'\n","\n","house1 = pd.read_excel(elec_excel_path)\n","house1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"nErYyOoIQ7dx","executionInfo":{"status":"ok","timestamp":1675321630867,"user_tz":-540,"elapsed":1378,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"d9a8c631-12b5-47bc-f19f-eb5a865334e3"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        date_time       kWh  temp  wind   hum  prcp  sun  non_elec_cool  solar\n","0   2020-06-01 00  8179.056  17.6   2.5  92.0   0.8  0.0            0.0    0.0\n","1   2020-06-01 01  8135.640  17.7   2.9  91.0   0.3  0.0            0.0    0.0\n","2   2020-06-01 02  8107.128  17.5   3.2  91.0   0.0  0.0            0.0    0.0\n","3   2020-06-01 03  8048.808  17.1   3.2  91.0   0.0  0.0            0.0    0.0\n","4   2020-06-01 04  8043.624  17.0   3.3  92.0   0.0  0.0            0.0    0.0\n","..            ...       ...   ...   ...   ...   ...  ...            ...    ...\n","95  2020-06-04 23  8604.144  19.9   1.4  91.0   0.0  0.0            0.0    0.0\n","96  2020-06-05 00  8598.960  19.7   2.0  90.0   0.0  0.0            0.0    0.0\n","97  2020-06-05 01  8573.040  19.5   1.4  90.0   0.0  0.0            0.0    0.0\n","98  2020-06-05 02  8561.376  19.3   1.6  90.0   0.0  0.0            0.0    0.0\n","99  2020-06-05 03  8549.064  19.3   1.6  90.0   0.0  0.0            0.0    0.0\n","\n","[100 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-9752eaa0-9621-4d8f-8409-7bed05f831d9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date_time</th>\n","      <th>kWh</th>\n","      <th>temp</th>\n","      <th>wind</th>\n","      <th>hum</th>\n","      <th>prcp</th>\n","      <th>sun</th>\n","      <th>non_elec_cool</th>\n","      <th>solar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-06-01 00</td>\n","      <td>8179.056</td>\n","      <td>17.6</td>\n","      <td>2.5</td>\n","      <td>92.0</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-06-01 01</td>\n","      <td>8135.640</td>\n","      <td>17.7</td>\n","      <td>2.9</td>\n","      <td>91.0</td>\n","      <td>0.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-06-01 02</td>\n","      <td>8107.128</td>\n","      <td>17.5</td>\n","      <td>3.2</td>\n","      <td>91.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-06-01 03</td>\n","      <td>8048.808</td>\n","      <td>17.1</td>\n","      <td>3.2</td>\n","      <td>91.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-06-01 04</td>\n","      <td>8043.624</td>\n","      <td>17.0</td>\n","      <td>3.3</td>\n","      <td>92.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>2020-06-04 23</td>\n","      <td>8604.144</td>\n","      <td>19.9</td>\n","      <td>1.4</td>\n","      <td>91.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>2020-06-05 00</td>\n","      <td>8598.960</td>\n","      <td>19.7</td>\n","      <td>2.0</td>\n","      <td>90.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>2020-06-05 01</td>\n","      <td>8573.040</td>\n","      <td>19.5</td>\n","      <td>1.4</td>\n","      <td>90.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>2020-06-05 02</td>\n","      <td>8561.376</td>\n","      <td>19.3</td>\n","      <td>1.6</td>\n","      <td>90.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>2020-06-05 03</td>\n","      <td>8549.064</td>\n","      <td>19.3</td>\n","      <td>1.6</td>\n","      <td>90.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9752eaa0-9621-4d8f-8409-7bed05f831d9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9752eaa0-9621-4d8f-8409-7bed05f831d9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9752eaa0-9621-4d8f-8409-7bed05f831d9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["TIP> 파일의 형식에 따라 함수가 달라집니다. \n","- csv 파일: `pd.read_csv` \n","- pickle 파일: `pd.read_pickle`\n","\n"],"metadata":{"id":"XC4QVYndZU-s"}},{"cell_type":"markdown","source":["### 5. DataFrame 다루기 \n","\n","5-1. DataFrame 알아보기 \n"],"metadata":{"id":"Yfek6VWulf9z"}},{"cell_type":"code","source":["# 열별 데이터 종류 확인하기 \n","house1.dtypes"],"metadata":{"id":"ozHOlJW2mnbJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675321776946,"user_tz":-540,"elapsed":654,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"f81b9a5c-1731-4556-aafe-a07e3f7736b9"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["date_time         object\n","kWh              float64\n","temp             float64\n","wind             float64\n","hum              float64\n","prcp             float64\n","sun              float64\n","non_elec_cool    float64\n","solar            float64\n","dtype: object"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# 맨 앞 n개의 줄만 확인하기 - 수를 쓰지 않으면 5개만 조회됩니다. \n","house1.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"lI-JCyNWnAPZ","executionInfo":{"status":"ok","timestamp":1675321786564,"user_tz":-540,"elapsed":472,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"5dfe4d51-e090-446d-e38b-b22b1956e1c1"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       date_time       kWh  temp  wind   hum  prcp  sun  non_elec_cool  solar\n","0  2020-06-01 00  8179.056  17.6   2.5  92.0   0.8  0.0            0.0    0.0\n","1  2020-06-01 01  8135.640  17.7   2.9  91.0   0.3  0.0            0.0    0.0\n","2  2020-06-01 02  8107.128  17.5   3.2  91.0   0.0  0.0            0.0    0.0\n","3  2020-06-01 03  8048.808  17.1   3.2  91.0   0.0  0.0            0.0    0.0\n","4  2020-06-01 04  8043.624  17.0   3.3  92.0   0.0  0.0            0.0    0.0\n","5  2020-06-01 05  8010.576  16.9   3.4  93.0   0.0  0.0            0.0    0.0\n","6  2020-06-01 06  7978.176  16.7   3.4  90.0   0.1  0.0            0.0    0.0\n","7  2020-06-01 07  8019.000  16.9   2.3  86.0   0.0  0.1            0.0    0.0\n","8  2020-06-01 08  8020.944  17.8   3.3  80.0   0.0  0.3            0.0    0.0\n","9  2020-06-01 09  8083.152  19.3   2.1  73.0   0.0  0.7            0.0    0.0"],"text/html":["\n","  <div id=\"df-321dace1-44f8-41aa-8a49-776b8e96d30e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date_time</th>\n","      <th>kWh</th>\n","      <th>temp</th>\n","      <th>wind</th>\n","      <th>hum</th>\n","      <th>prcp</th>\n","      <th>sun</th>\n","      <th>non_elec_cool</th>\n","      <th>solar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-06-01 00</td>\n","      <td>8179.056</td>\n","      <td>17.6</td>\n","      <td>2.5</td>\n","      <td>92.0</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-06-01 01</td>\n","      <td>8135.640</td>\n","      <td>17.7</td>\n","      <td>2.9</td>\n","      <td>91.0</td>\n","      <td>0.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-06-01 02</td>\n","      <td>8107.128</td>\n","      <td>17.5</td>\n","      <td>3.2</td>\n","      <td>91.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-06-01 03</td>\n","      <td>8048.808</td>\n","      <td>17.1</td>\n","      <td>3.2</td>\n","      <td>91.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-06-01 04</td>\n","      <td>8043.624</td>\n","      <td>17.0</td>\n","      <td>3.3</td>\n","      <td>92.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2020-06-01 05</td>\n","      <td>8010.576</td>\n","      <td>16.9</td>\n","      <td>3.4</td>\n","      <td>93.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2020-06-01 06</td>\n","      <td>7978.176</td>\n","      <td>16.7</td>\n","      <td>3.4</td>\n","      <td>90.0</td>\n","      <td>0.1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2020-06-01 07</td>\n","      <td>8019.000</td>\n","      <td>16.9</td>\n","      <td>2.3</td>\n","      <td>86.0</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2020-06-01 08</td>\n","      <td>8020.944</td>\n","      <td>17.8</td>\n","      <td>3.3</td>\n","      <td>80.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2020-06-01 09</td>\n","      <td>8083.152</td>\n","      <td>19.3</td>\n","      <td>2.1</td>\n","      <td>73.0</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-321dace1-44f8-41aa-8a49-776b8e96d30e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-321dace1-44f8-41aa-8a49-776b8e96d30e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-321dace1-44f8-41aa-8a49-776b8e96d30e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# 맨 뒤 n개의 줄만 확인하기 \n","house1.tail(3)"],"metadata":{"id":"3Ew6_Ng-noFC","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1675321801050,"user_tz":-540,"elapsed":669,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"b97bf51a-2e4e-407a-c170-cc55466c5c06"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        date_time       kWh  temp  wind   hum  prcp  sun  non_elec_cool  solar\n","97  2020-06-05 01  8573.040  19.5   1.4  90.0   0.0  0.0            0.0    0.0\n","98  2020-06-05 02  8561.376  19.3   1.6  90.0   0.0  0.0            0.0    0.0\n","99  2020-06-05 03  8549.064  19.3   1.6  90.0   0.0  0.0            0.0    0.0"],"text/html":["\n","  <div id=\"df-b8251e4f-5988-4da8-a45e-5dc4497835fe\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date_time</th>\n","      <th>kWh</th>\n","      <th>temp</th>\n","      <th>wind</th>\n","      <th>hum</th>\n","      <th>prcp</th>\n","      <th>sun</th>\n","      <th>non_elec_cool</th>\n","      <th>solar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>97</th>\n","      <td>2020-06-05 01</td>\n","      <td>8573.040</td>\n","      <td>19.5</td>\n","      <td>1.4</td>\n","      <td>90.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>2020-06-05 02</td>\n","      <td>8561.376</td>\n","      <td>19.3</td>\n","      <td>1.6</td>\n","      <td>90.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>2020-06-05 03</td>\n","      <td>8549.064</td>\n","      <td>19.3</td>\n","      <td>1.6</td>\n","      <td>90.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8251e4f-5988-4da8-a45e-5dc4497835fe')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b8251e4f-5988-4da8-a45e-5dc4497835fe button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b8251e4f-5988-4da8-a45e-5dc4497835fe');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# index 확인하기 \n","print(house1.index)\n","\n","# columns 확인하기\n","print(house1.columns)"],"metadata":{"id":"3kevNTm5nt40","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675321805643,"user_tz":-540,"elapsed":660,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"86d39aac-4399-4ba5-a20c-d0c152b96bf3"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["RangeIndex(start=0, stop=100, step=1)\n","Index(['date_time', 'kWh', 'temp', 'wind', 'hum', 'prcp', 'sun',\n","       'non_elec_cool', 'solar'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["# 간단히 통계 분석하기 \n","house1.describe()"],"metadata":{"id":"JgW6sfX8oqpF","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1675321827198,"user_tz":-540,"elapsed":616,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"e69a5365-568e-413f-f09e-8264fe8b94d7"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              kWh        temp        wind         hum        prcp         sun  \\\n","count   100.00000  100.000000  100.000000  100.000000  100.000000  100.000000   \n","mean   8199.77904   20.336000    2.596000   72.610000    0.034000    0.259000   \n","std     247.43929    3.139501    1.067416   15.760772    0.207545    0.399519   \n","min    7784.42400   14.800000    0.400000   39.000000    0.000000    0.000000   \n","25%    8020.62000   17.875000    1.975000   60.750000    0.000000    0.000000   \n","50%    8113.28400   20.100000    2.500000   77.000000    0.000000    0.000000   \n","75%    8351.58600   22.175000    3.200000   86.250000    0.000000    0.500000   \n","max    8671.53600   28.200000    5.500000   93.000000    1.900000    1.000000   \n","\n","       non_elec_cool  solar  \n","count          100.0  100.0  \n","mean             0.0    0.0  \n","std              0.0    0.0  \n","min              0.0    0.0  \n","25%              0.0    0.0  \n","50%              0.0    0.0  \n","75%              0.0    0.0  \n","max              0.0    0.0  "],"text/html":["\n","  <div id=\"df-b2064640-42a5-44ed-abbe-ef0d79ec6138\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>kWh</th>\n","      <th>temp</th>\n","      <th>wind</th>\n","      <th>hum</th>\n","      <th>prcp</th>\n","      <th>sun</th>\n","      <th>non_elec_cool</th>\n","      <th>solar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.0</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>8199.77904</td>\n","      <td>20.336000</td>\n","      <td>2.596000</td>\n","      <td>72.610000</td>\n","      <td>0.034000</td>\n","      <td>0.259000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>247.43929</td>\n","      <td>3.139501</td>\n","      <td>1.067416</td>\n","      <td>15.760772</td>\n","      <td>0.207545</td>\n","      <td>0.399519</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>7784.42400</td>\n","      <td>14.800000</td>\n","      <td>0.400000</td>\n","      <td>39.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>8020.62000</td>\n","      <td>17.875000</td>\n","      <td>1.975000</td>\n","      <td>60.750000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>8113.28400</td>\n","      <td>20.100000</td>\n","      <td>2.500000</td>\n","      <td>77.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>8351.58600</td>\n","      <td>22.175000</td>\n","      <td>3.200000</td>\n","      <td>86.250000</td>\n","      <td>0.000000</td>\n","      <td>0.500000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>8671.53600</td>\n","      <td>28.200000</td>\n","      <td>5.500000</td>\n","      <td>93.000000</td>\n","      <td>1.900000</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2064640-42a5-44ed-abbe-ef0d79ec6138')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b2064640-42a5-44ed-abbe-ef0d79ec6138 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b2064640-42a5-44ed-abbe-ef0d79ec6138');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# 행과 열 교체하기 ~ 전치행렬\n","house1.T"],"metadata":{"id":"N0IoVQm4rma6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#index 를 abc 순으로 열을 정렬하기\n","#axis = 0 일 때: 알파벳 순 \n","#axis = 1 일 때: 알파벳 역순 \n","house1.sort_index(axis=1, ascending=False)"],"metadata":{"id":"JmdxJqRYtvWO","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1675321843327,"user_tz":-540,"elapsed":650,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"9a4e1de6-09da-42ea-ce21-c2a7f5e85b7a"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    wind  temp  sun  solar  prcp  non_elec_cool       kWh   hum      date_time\n","0    2.5  17.6  0.0    0.0   0.8            0.0  8179.056  92.0  2020-06-01 00\n","1    2.9  17.7  0.0    0.0   0.3            0.0  8135.640  91.0  2020-06-01 01\n","2    3.2  17.5  0.0    0.0   0.0            0.0  8107.128  91.0  2020-06-01 02\n","3    3.2  17.1  0.0    0.0   0.0            0.0  8048.808  91.0  2020-06-01 03\n","4    3.3  17.0  0.0    0.0   0.0            0.0  8043.624  92.0  2020-06-01 04\n","..   ...   ...  ...    ...   ...            ...       ...   ...            ...\n","95   1.4  19.9  0.0    0.0   0.0            0.0  8604.144  91.0  2020-06-04 23\n","96   2.0  19.7  0.0    0.0   0.0            0.0  8598.960  90.0  2020-06-05 00\n","97   1.4  19.5  0.0    0.0   0.0            0.0  8573.040  90.0  2020-06-05 01\n","98   1.6  19.3  0.0    0.0   0.0            0.0  8561.376  90.0  2020-06-05 02\n","99   1.6  19.3  0.0    0.0   0.0            0.0  8549.064  90.0  2020-06-05 03\n","\n","[100 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-f7757038-f39a-48e2-8543-5272a211b946\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>wind</th>\n","      <th>temp</th>\n","      <th>sun</th>\n","      <th>solar</th>\n","      <th>prcp</th>\n","      <th>non_elec_cool</th>\n","      <th>kWh</th>\n","      <th>hum</th>\n","      <th>date_time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.5</td>\n","      <td>17.6</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>8179.056</td>\n","      <td>92.0</td>\n","      <td>2020-06-01 00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.9</td>\n","      <td>17.7</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>0.0</td>\n","      <td>8135.640</td>\n","      <td>91.0</td>\n","      <td>2020-06-01 01</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.2</td>\n","      <td>17.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8107.128</td>\n","      <td>91.0</td>\n","      <td>2020-06-01 02</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3.2</td>\n","      <td>17.1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8048.808</td>\n","      <td>91.0</td>\n","      <td>2020-06-01 03</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.3</td>\n","      <td>17.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8043.624</td>\n","      <td>92.0</td>\n","      <td>2020-06-01 04</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>1.4</td>\n","      <td>19.9</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8604.144</td>\n","      <td>91.0</td>\n","      <td>2020-06-04 23</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>2.0</td>\n","      <td>19.7</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8598.960</td>\n","      <td>90.0</td>\n","      <td>2020-06-05 00</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>1.4</td>\n","      <td>19.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8573.040</td>\n","      <td>90.0</td>\n","      <td>2020-06-05 01</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>1.6</td>\n","      <td>19.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8561.376</td>\n","      <td>90.0</td>\n","      <td>2020-06-05 02</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>1.6</td>\n","      <td>19.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8549.064</td>\n","      <td>90.0</td>\n","      <td>2020-06-05 03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7757038-f39a-48e2-8543-5272a211b946')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f7757038-f39a-48e2-8543-5272a211b946 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f7757038-f39a-48e2-8543-5272a211b946');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# 특정한 열의 값을 기준으로 행을 정렬하기 \n","# ascending=False 일 때: 해당 열의 값이 높은 순서대로(내림차순)\n","# ascending=True 일 때: 해당 열의 값이 낮은 순서대로(오름차순)\n","house1.sort_values(by=\"wind\", ascending=False)"],"metadata":{"id":"Z0mt-3DErqIm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["5-2. 데이터 선택하기 "],"metadata":{"id":"Ekj8bFXeuOGB"}},{"cell_type":"code","source":["# 하나의 열에 있는 값만 선택하기 \n","# 결과물은 series 의 형태가 됩니다. \n","house1[\"temp\"]\n","\n","house2 = house1.temp\n","print(house2)"],"metadata":{"id":"3GLa0h4NuNO6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 정수 위치로 특정 범위의 행만 선택하기 \n","house1[0:3]"],"metadata":{"id":"CAleDQZUu7Iw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# iloc 함수로 특정한 행과 열만 추출하기 \n","# iloc은 행과 열을 정수 위치(~번째)로 찾아냅니다. 이와 달리 loc 은 행과 열을 이름으로 찾아냅니다. \n","house1.iloc[0:2, 0:3]"],"metadata":{"id":"blr9GUqFx3Ph"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# loc 함수로 특정한 열만 추출하기 \n","# 앞의 : 에 해당하는 범위는 index 의 이름에 해당합니다. \n","# 뒤의 중괄호 안에 원하는 열의 이름을 적습니다.  \n","house1.loc[:5, [\"wind\", \"sun\"]]"],"metadata":{"id":"oXSIzFOfvlk9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 열에서 특정한 조건을 만족하는 값을 가진 행만 추출하기\n","house1[house1[\"temp\"] > 19]"],"metadata":{"id":"xhxROk0awsLg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["5-3. 행 또는 열 추가하기 "],"metadata":{"id":"qIyJxxBVzDX1"}},{"cell_type":"code","source":["# 행 추가하기\n","\n","# 1) 데이터 종류 확인하기  \n","print(house1.dtypes)\n","\n","# 2) 열 제목 가져오기: 열 제목을 가져와서 cols 변수에 저장합니다. \n","cols = house1.columns\n","print(cols)\n","\n","# 3) 새로운 데이터 가져오기: data, columns, index는 리스트 형태여야 합니다. \n","new_data = pd.DataFrame(data=[['2020-06-05 03', 8549.064, 19.3, 1.6, 90, 0, 0]], columns=cols, index=[99])\n","\n","print(new_data)\n","\n","# 4) 데이터 합치기 \n","print(house1.append(new_data))"],"metadata":{"id":"YlPCfp9ty-A2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 열 추가하기\n","# 하나씩 추가해주어야 합니다. 아래와 같이 코드를 작성하면 모든 행에 같은 값이 입력됩니다. \n","house1['lat'] = 0\n","house1['lon'] = 0\n","\n","print(house1)\n","\n","# 다른 방법\n","# house1.insert(원하는 열의 위치, \"열의 이름\", [값1, 값2, ... ], True)"],"metadata":{"id":"RyDa-TXGLLv0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["5-4. 행 또는 열 삭제하기"],"metadata":{"id":"gMiZu404NXIt"}},{"cell_type":"code","source":["# 행 삭제하기 \n","# 1. 삭제하고 싶은 행의 인덱스 명으로 삭제하기 \n","house1_row_drop1 = house1.drop(index=[0])\n","print(house1_row_drop1)\n","\n","# 2. 범위로 삭제하기 \n","house1_row_drop2 = house1.drop(range(0, 10))\n","print(house1_row_drop2) "],"metadata":{"id":"zw8-TB66MR9r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 열 삭제하기 \n","# 삭제혹 싶은 열의 이름으로  삭제합니다. \n","house1_col_drop = house1.drop(columns=['non_elec_cool', 'solar'])\n","print(house1_col_drop)"],"metadata":{"id":"yRWZotgLMR2f"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6. 결측값 처리하기 \n","결측값이 있다면 나중에 그래프를 만들거나 데이터를 분석하는데에 있어 문제가 생길 수 있습니다. 결측값을 찾아 1) 0으로 바꾸거나 2) 해당 행을 삭제해야 합니다. \n","\n","6-1. NaN, NaT, None, Null 형태의 결측값 찾기 "],"metadata":{"id":"hDrnWMlNP_pW"}},{"cell_type":"code","source":["# Null 값 찾기 \n","# 표의 위치에서 어디에 결측값이 있는지 확인힙니다. \n","house1.isnull()\n","\n","# 각 열에 결측값이 몇 개나 있는지 확인합니다. \n","house1.isnull().sum()"],"metadata":{"id":"6HMzaWwzSWSy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675322067064,"user_tz":-540,"elapsed":762,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"3a8bbf18-39b0-4de7-db11-73987842f781"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["date_time        0\n","kWh              0\n","temp             0\n","wind             0\n","hum              0\n","prcp             0\n","sun              0\n","non_elec_cool    0\n","solar            0\n","dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["6-2. 결측값이 있는 행 또는 열 삭제하기 "],"metadata":{"id":"sUv2G_IMTAXn"}},{"cell_type":"code","source":["# 모든 열에서 찾고 삭제하기 \n","house1 = house1.dropna()\n","# house1.dropna(how='any'): 결정된 행에 결측값이 하나라도 있을 경우 해당 행을 삭제합니다. \n","# house1.dropna(how='all'): 결정된 행에 모든 값이 결측값이어야 삭제합니다. \n","\n","print(house1)"],"metadata":{"id":"B4ploh1kTT0Q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675322111724,"user_tz":-540,"elapsed":1378,"user":{"displayName":"ki kim","userId":"11877903355283430795"}},"outputId":"0938ebed-2778-4e5e-9cf2-5262a20f9d7a"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["        date_time       kWh  temp  wind   hum  prcp  sun  non_elec_cool  solar\n","0   2020-06-01 00  8179.056  17.6   2.5  92.0   0.8  0.0            0.0    0.0\n","1   2020-06-01 01  8135.640  17.7   2.9  91.0   0.3  0.0            0.0    0.0\n","2   2020-06-01 02  8107.128  17.5   3.2  91.0   0.0  0.0            0.0    0.0\n","3   2020-06-01 03  8048.808  17.1   3.2  91.0   0.0  0.0            0.0    0.0\n","4   2020-06-01 04  8043.624  17.0   3.3  92.0   0.0  0.0            0.0    0.0\n","..            ...       ...   ...   ...   ...   ...  ...            ...    ...\n","95  2020-06-04 23  8604.144  19.9   1.4  91.0   0.0  0.0            0.0    0.0\n","96  2020-06-05 00  8598.960  19.7   2.0  90.0   0.0  0.0            0.0    0.0\n","97  2020-06-05 01  8573.040  19.5   1.4  90.0   0.0  0.0            0.0    0.0\n","98  2020-06-05 02  8561.376  19.3   1.6  90.0   0.0  0.0            0.0    0.0\n","99  2020-06-05 03  8549.064  19.3   1.6  90.0   0.0  0.0            0.0    0.0\n","\n","[100 rows x 9 columns]\n"]}]},{"cell_type":"code","source":["# 특정한 열에서만 찾고 삭제하기 \n","house1 = house1.dropna(subset=['wind'])\n","print(house1)"],"metadata":{"id":"55CcdhqhUekK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["6-3. 결측값 대체하기 "],"metadata":{"id":"Ho1ez12YTzvI"}},{"cell_type":"code","source":["# 데이터에 있는 모든 결측값을 0으로 대체합니다. \n","house1.fillna(0)"],"metadata":{"id":"AEvaMrMDUXCV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 결측치를 해당 열의 중간값으로 대체합니다. \n","house1.fillna({'wind': house1['wind'].mean()}) "],"metadata":{"id":"W80rmV3YVA0h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 각 열의 결측값을 특정한 값으로 대체합니다.\n","house1.fillna({'temp': '17', 'hum': '90'})"],"metadata":{"id":"pPnOqjr6UyZj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 바로 앞 행의 값으로 결측값을 대체합니다. \n","house1 = house1.fillna(method='ffill')\n","\n","# 바로 뒷 행의 값으로 결측값을 대체합니다. \n","house1.fillna(method='bfill')"],"metadata":{"id":"y6V_cPhrWAlO"},"execution_count":null,"outputs":[]}]}